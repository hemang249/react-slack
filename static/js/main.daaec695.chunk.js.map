{"version":3,"sources":["serviceWorker.js","components/messages/MessagesHeader.js","firebase.js","config.js","components/messages/FileModal.js","components/messages/MessageForm.js","components/messages/Message.js","components/messages/Messages.js","components/color-panel/ColorPanel.js","components/side-panel/UserPanel.js","components/side-panel/Channels.js","actions/index.js","actions/types.js","components/side-panel/DirectMessages.js","components/side-panel/SidePanel.js","components/meta-panel/MetaPanel.js","components/App.js","components/auth/Login.js","components/auth/Register.js","reducers/index.js","Spinner.js","components/Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","MessagesHeader","state","currentChannel","searchText","handleChange","event","setState","target","name","value","nextProps","this","Fragment","Segment","clearing","Header","fluid","as","floated","style","marginBottom","toUpperCase","Icon","color","Input","size","icon","placeholder","onChange","Button","onClick","props","searchMessages","Component","connect","channel","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","FileModal","file","permittedTypes","user","percentUploaded","storageRef","storage","ref","messgesRef","database","uploadState","uploadTask","addFile","files","sendFile","isPermitted","metaData","contentType","mime","lookup","uploadFile","clearFile","pathToUpload","id","filePath","uuidv4","child","put","on","snap","Math","round","bytesTransferred","totalBytes","err","console","log","closeModal","snapshot","getDownloadURL","then","url","sendFileMessage","fileName","includes","Modal","basic","open","modal","close","Content","label","type","Actions","inverted","currentUser","MessageForm","message","loading","errors","messagesRef","openModal","sendMessage","length","push","set","createMessage","catch","concat","timestamp","ServerValue","TIMESTAMP","uid","displayName","photoURL","content","className","labelPosition","some","Group","icons","widths","disabled","Message","time","Comment","Avatar","src","Author","Metadata","moment","fromNow","hasOwnProperty","isImage","Image","image","Text","Messages","messages","messagesLoading","uniqueUsers","searching","addListeners","channelId","addMessageListener","loadedMessages","val","map","m","displaySearchMessages","key","displayMessages","off","React","ColorPanel","Sidebar","Menu","vertical","visible","width","Divider","UserPanel","handleSignout","auth","signOut","dropdownOptions","text","Grid","background","Column","Row","paddingTop","margin","textAlign","float","padding","Dropdown","trigger","paddingLeft","spaced","height","borderRadius","options","Channels","channels","showModal","channelName","firstLoad","channelDetails","activeChannel","channelsRef","loadedChannels","setFirstChannel","handleSubmit","preventDefault","isFormValid","addChannel","newChannel","details","createdBy","update","changeChannel","setCurrentChannel","setActiveChannel","displayChannels","Item","opacity","active","removeListeners","onClose","Form","payload","DirectMessages","users","usersRef","SidePanel","fixed","fontSize","MetaPanel","columns","marginLeft","Login","email","password","signInWithEmailAndPassword","signedInUser","saveUser","createdUser","avatar","showErrors","i","verticalAlign","maxWidth","onSubmit","stacked","iconPosition","to","Register","username","passwordConfirmation","createUserWithEmailAndPassword","updateProfile","md5","isFormEmpty","isPasswordValid","initialUserState","isLoading","initialChannelState","rootReducer","combineReducers","action","Spinner","Dimmer","Loader","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","history","clearUser","path","exact","component","App","RoutesWithAuth","withRouter","Routes","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.daaec695.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\nimport { Header, Button, Segment, Icon, Input } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\n\nclass MessagesHeader extends Component {\n  state = {\n    currentChannel: \"\",\n    searchText: \"\",\n  };\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, currentChannel: nextProps.currentChannel });\n  }\n\n  handleChange = (event) => {\n    this.setState({ ...this.state, [event.target.name]: event.target.value });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Segment clearing>\n          <Header\n            fluid=\"true\"\n            as=\"h2\"\n            floated=\"left\"\n            style={{ marginBottom: 0 }}\n          >\n            <span>\n              {this.state.currentChannel &&\n                this.state.currentChannel.name.toUpperCase()}\n              <Icon name=\"star outline\" color=\"black\" />\n            </span>\n          </Header>\n          <Header floated=\"right\">\n            <Input\n              size=\"mini\"\n              icon=\"search\"\n              name=\"searchText\"\n              placeholder=\"search messages\"\n              onChange={this.handleChange}\n            ></Input>\n            <br />\n            <Button\n              color=\"green\"\n              onClick={() => {\n                this.props.searchMessages(this.state.searchText);\n              }}\n            >\n              {\" \"}\n              Search{\" \"}\n            </Button>\n          </Header>\n        </Segment>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentChannel: state.channel.currentChannel,\n});\n\nexport default connect(mapStateToProps, {})(MessagesHeader);\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\nimport {\n  FIREBASE_APP_ID,\n  FIREBASE_AUTH_DOMAIN,\n  FIREBASE_DATABASE_URL,\n  FIREBASE_KEY,\n  FIREBASE_STORAGE_URL,\n} from \"./config\";\n\nvar firebaseConfig = {\n  apiKey: FIREBASE_KEY,\n  authDomain: FIREBASE_AUTH_DOMAIN,\n  databaseURL: FIREBASE_DATABASE_URL,\n  projectId: \"react-slack-clone-7b265\",\n  storageBucket: FIREBASE_STORAGE_URL,\n  messagingSenderId: \"289515100388\",\n  appId: FIREBASE_APP_ID,\n  measurementId: \"G-5EFCYX52T1\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","export const FIREBASE_APP_ID = process.env.REACT_APP_FIREBASE_APP_ID;\nexport const FIREBASE_DATABASE_URL =\n  process.env.REACT_APP_FIREBASE_DATABASE_URL;\nexport const FIREBASE_KEY = process.env.REACT_APP_FIREBASE_KEY;\nexport const FIREBASE_STORAGE_URL = process.env.REACT_APP_FIREBASE_STORAGE_URL;\nexport const FIREBASE_AUTH_DOMAIN = process.env.REACT_APP_FIREBASE_AUTH_DOMAIN;\n","import React, { Component } from \"react\";\nimport { Modal, Input, Button, Icon } from \"semantic-ui-react\";\nimport mime from \"mime-types\";\nimport { connect } from \"react-redux\";\nimport firebase from \"../../firebase\";\nimport uuidv4 from \"uuid/v4\";\n\nclass FileModal extends Component {\n  state = {\n    file: null,\n    permittedTypes: [\"image/jpeg\", \"image/png\", \"image/jpg\"],\n    user: null,\n    percentUploaded: 0,\n    currentChannel: null,\n    storageRef: firebase.storage().ref(),\n    messgesRef: firebase.database().ref(\"messages\"),\n    uploadState: \"\",\n    uploadTask: \"\",\n  };\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      ...this.state,\n      user: nextProps.user,\n      currentChannel: nextProps.currentChannel,\n    });\n  }\n\n  addFile = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      this.setState({ ...this.state, file: file });\n    }\n  };\n\n  sendFile = () => {\n    const { file } = this.state;\n    if (file) {\n      if (this.isPermitted(file.name)) {\n        const metaData = { contentType: mime.lookup(file.name) };\n        this.uploadFile(file, metaData);\n      }\n    }\n  };\n\n  clearFile = () => {\n    this.setState({ ...this.state, file: null });\n  };\n\n  uploadFile = (file, metaData) => {\n    const pathToUpload = this.state.currentChannel.id;\n    const ref = this.state.messgesRef;\n    const filePath = `chat/public${uuidv4()}.jpg`;\n\n    this.setState(\n      {\n        ...this.state,\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metaData),\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          (snap) => {\n            const percentUploaded = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            );\n            this.setState({ percentUploaded });\n          },\n          (err) => console.log(err),\n          () => {\n            this.props.closeModal();\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then((url) =>\n                this.props.sendFileMessage(url, ref, pathToUpload)\n              );\n          }\n        );\n      }\n    );\n  };\n\n  isPermitted = (fileName) =>\n    this.state.permittedTypes.includes(mime.lookup(fileName));\n\n  render() {\n    return (\n      <Modal basic open={this.props.modal} close={this.props.closeModal}>\n        <Modal.Header>Select File</Modal.Header>\n        <Modal.Content>\n          <Input\n            onChange={this.addFile}\n            fluid\n            label=\"file types : jpg / png\"\n            name=\"file\"\n            type=\"file\"\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"green\" onClick={this.sendFile} inverted>\n            {\" \"}\n            <Icon name=\"checkmark\" />\n            Upload\n          </Button>\n          <Button color=\"red\" onClick={this.props.closeModal} inverted>\n            {\" \"}\n            <Icon name=\"remove\" /> Cancel\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentChannel: state.channel.currentChannel,\n  user: state.user.currentUser,\n});\n\nexport default connect(mapStateToProps, {})(FileModal);\n","import React, { Component } from \"react\";\nimport { Segment, Input, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport firebase from \"../../firebase\";\nimport FileModal from \"./FileModal\";\n\nclass MessageForm extends Component {\n  state = {\n    user: this.props.currentUser,\n    message: \"\",\n    loading: false,\n    currentChannel: this.props.currentChannel,\n    errors: [],\n    messagesRef: this.props.messagesRef,\n    modal: false,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, currentChannel: nextProps.currentChannel });\n  }\n\n  handleChange = (event) => {\n    this.setState({ ...this.state, [event.target.name]: event.target.value });\n  };\n\n  openModal = () => this.setState({ ...this.state, modal: true });\n  closeModal = () => this.setState({ ...this.state, modal: false });\n\n  sendMessage = () => {\n    const { messagesRef, message, currentChannel } = this.state;\n\n    if (message.length > 0) {\n      this.setState({ ...this.state, loading: true });\n      messagesRef\n        .child(currentChannel.id)\n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          console.log(\"sent\");\n          this.setState({\n            ...this.state,\n            message: \"\",\n            loading: false,\n            errors: [],\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          this.setState({\n            ...this.state,\n            loading: false,\n            errors: this.state.errors.concat(err),\n          });\n        });\n    }\n  };\n\n  createMessage = (url) => {\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: this.state.user.uid,\n        displayName: this.state.user.displayName,\n        photoURL: this.state.user.photoURL,\n      },\n    };\n\n    if (url) {\n      message[\"image\"] = url;\n    } else {\n      message.content = this.state.message;\n    }\n    return message;\n  };\n\n  sendFileMessage = (url, ref, pathToUpload) => {\n    ref\n      .child(pathToUpload)\n      .push()\n      .set(this.createMessage(url))\n      .then(() => console.log(\"upload done\"))\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Segment className=\"message__form\">\n          <Input\n            fluid\n            name=\"message\"\n            onChange={this.handleChange}\n            value={this.state.message}\n            style={{ marginBottom: \"0.7em\" }}\n            label={<Button icon=\"add\"></Button>}\n            labelPosition=\"left\"\n            className={\n              this.state.errors.some((err) => err.includes(\"message\"))\n                ? \"error\"\n                : \"\"\n            }\n          />\n          <Button.Group icons widths=\"2\">\n            <Button\n              disabled={this.state.loading}\n              onClick={this.sendMessage}\n              color=\"orange\"\n              icon=\"edit\"\n              content=\"reply\"\n              labelPosition=\"left\"\n            />\n            <Button\n              onClick={this.openModal}\n              color=\"green\"\n              content=\"upload media\"\n              icon=\"cloud upload\"\n              labelPosition=\"right\"\n            />\n\n            <FileModal\n              modal={this.state.modal}\n              sendFileMessage={this.sendFileMessage}\n              closeModal={this.closeModal}\n            />\n          </Button.Group>\n        </Segment>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentChannel: state.channel.currentChannel,\n  currentUser: state.user.currentUser,\n});\n\nexport default connect(mapStateToProps, {})(MessageForm);\n","import React from \"react\";\nimport { Comment, Image } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nexport default function Message(props) {\n  const isOwnMessage = (message, user) => user.uid === message.user.id;\n\n  const timeFromNow = (time) => moment(time).fromNow();\n\n  const isImage = (message) => {\n    return (\n      message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\")\n    );\n  };\n\n  return (\n    <Comment>\n      <Comment.Avatar src={props.message.user.photoURL} />\n      <Comment.Content\n        className={\n          isOwnMessage(props.message, props.user) ? \"message__self\" : \"\"\n        }\n      >\n        <Comment.Author as=\"a\">{props.message.user.displayName}</Comment.Author>\n        <Comment.Metadata>\n          {timeFromNow(props.message.timestamp)}\n        </Comment.Metadata>\n\n        {isImage(props.message) ? (\n          <Image src={props.message.image} />\n        ) : (\n          <Comment.Text>{props.message.content}</Comment.Text>\n        )}\n      </Comment.Content>\n    </Comment>\n  );\n}\n","import React from \"react\";\nimport { Segment, Comment } from \"semantic-ui-react\";\nimport MessagesHeader from \"./MessagesHeader\";\nimport MessageForm from \"./MessageForm\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport Message from \"./Message\";\n\nclass Messages extends React.Component {\n  state = {\n    messagesRef: firebase.database().ref(\"messages\"),\n    currentChannel: null,\n    messages: [],\n    messagesLoading: true,\n    user: null,\n    uniqueUsers: 0,\n    searching: false,\n    searchMessages: [],\n  };\n\n  componentWillUnmount() {\n    this.state.messagesRef.off();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState(\n      {\n        ...this.state,\n        user: nextProps.user,\n        currentChannel: nextProps.currentChannel,\n      },\n      () => {\n        const { currentChannel, user } = this.state;\n        if (currentChannel && user) {\n          this.addListeners(currentChannel.id);\n        }\n      }\n    );\n  }\n\n  addListeners = (channelId) => {\n    this.addMessageListener(channelId);\n  };\n\n  addMessageListener = (channelId) => {\n    let loadedMessages = [];\n    this.state.messagesRef.child(channelId).on(\"child_added\", (snap) => {\n      loadedMessages.push(snap.val());\n      this.setState({\n        ...this.state,\n        messages: loadedMessages,\n        messagesLoading: false,\n      });\n    });\n  };\n\n  searchMessages = (searchText) => {\n    const searchMessages = [];\n    if (searchText != \"\") {\n      this.state.messages.map((m) => {\n        if (m.content) {\n          if (m.content.includes(searchText)) {\n            searchMessages.push(m);\n          }\n        }\n      });\n      this.setState({\n        ...this.state,\n        searchMessages: searchMessages,\n        searching: true,\n      });\n    } else {\n      this.setState({ ...this.state, searching: false });\n    }\n  };\n\n  displaySearchMessages = () => {\n    const { searchMessages } = this.state;\n    return searchMessages.length > 0 ? (\n      searchMessages.map((m) => (\n        <Message key={m.timestamp} message={m} user={this.state.user} />\n      ))\n    ) : (\n      <div>Cannot find such a message</div>\n    );\n  };\n\n  displayMessages = (messages, channel) => {\n    return messages.length > 0 ? (\n      messages.map((m) => (\n        <Message key={m.timestamp} message={m} user={this.state.user} />\n      ))\n    ) : (\n      <div>This is the beginning of Channel</div>\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <MessagesHeader\n          searchMessages={this.searchMessages}\n          uniqueUsers={this.state.uniqueUsers}\n        />\n        <Segment>\n          <Comment.Group className=\"messages\">\n            {this.state.searching\n              ? this.displaySearchMessages()\n              : this.displayMessages(\n                  this.state.messages,\n                  this.state.currentChannel\n                )}\n          </Comment.Group>\n        </Segment>\n        <MessageForm messagesRef={this.state.messagesRef} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user.currentUser,\n  currentChannel: state.channel.currentChannel,\n});\n\nexport default connect(mapStateToProps, {})(Messages);\n","import React from \"react\";\nimport { Sidebar, Divider, Menu, Button } from \"semantic-ui-react\";\n\nclass ColorPanel extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Sidebar\n          as={Menu}\n          icon=\"labelled\"\n          inverted\n          vertical\n          visible\n          width=\"very thin\"\n        >\n          <Divider />\n          <Button icon=\"add\" size=\"small\" color=\"blue\"></Button>\n        </Sidebar>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ColorPanel;\n","import React, { Component } from \"react\";\nimport { Grid, Header, Icon, Image, Dropdown } from \"semantic-ui-react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\n\nclass UserPanel extends Component {\n  state = {\n    user: this.props.currentUser,\n  };\n\n  handleSignout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => console.log(\"Signout\"))\n      .catch((err) => console.log(err));\n  };\n\n  dropdownOptions = () => [\n    {\n      key: \"user\",\n      text: (\n        <span>\n          Signed In as <strong>{this.state.user.displayName}</strong>{\" \"}\n        </span>\n      ),\n    },\n\n    {\n      key: \"avatar\",\n      text: <span> Change Avatar</span>,\n    },\n\n    {\n      key: \"signout\",\n      text: <span onClick={this.handleSignout}>Sign out</span>,\n    },\n  ];\n\n  render() {\n    console.log(this.state);\n    return (\n      <Grid style={{ background: \"#2B2B52\" }}>\n        <Grid.Column>\n          <Grid.Row style={{ paddingTop: \"1.2em\", margin: \"0px\" }}>\n            <Header style={{ color: \"white\", textAlign: \"center\" }}>\n              <Header.Content inverted float=\"left\" as=\"h2\">\n                <Icon name=\"code\"></Icon>\n                Klack\n              </Header.Content>\n            </Header>\n          </Grid.Row>\n\n          <Header style={{ padding: \"0.24em\" }} inverted as=\"h4\">\n            <Dropdown\n              trigger={\n                <span style={{ paddingLeft: \"4em\" }}>\n                  {\" \"}\n                  <Image\n                    src={this.state.user.photoURL}\n                    spaced=\"right\"\n                    style={{\n                      width: \"40px\",\n                      height: \"40px\",\n                      borderRadius: \"50%\",\n                    }}\n                  />{\" \"}\n                  {this.state.user.displayName}\n                </span>\n              }\n              options={this.dropdownOptions()}\n            />\n          </Header>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n});\n\nexport default connect(mapStateToProps, {})(UserPanel);\n","import React, { Component } from \"react\";\nimport { Menu, Icon, Modal, Input, Form, Button } from \"semantic-ui-react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel } from \"../../actions/index\";\n\nclass Channels extends Component {\n  state = {\n    user: this.props.user,\n    channels: [],\n    showModal: false,\n    channelName: \"\",\n    firstLoad: true,\n    channelDetails: \"\",\n    activeChannel: \"\",\n    channelsRef: firebase.database().ref(\"channels\"),\n  };\n\n  componentDidMount() {\n    this.addListeners();\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners() {\n    this.state.channelsRef.off();\n  }\n\n  addListeners = () => {\n    let loadedChannels = [];\n    this.state.channelsRef.on(\"child_added\", (snap) => {\n      loadedChannels.push(snap.val());\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  showModal = () => {\n    this.setState({ showModal: true });\n  };\n\n  closeModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"Submit\");\n    if (this.isFormValid(this.state)) {\n      this.addChannel();\n    }\n  };\n\n  isFormValid = ({ channelName, channelDetails }) => {\n    return channelName.length && channelDetails.length;\n  };\n\n  addChannel = () => {\n    const key = this.state.channelsRef.push().key;\n    const newChannel = {\n      id: key,\n      name: this.state.channelName,\n      details: this.state.channelDetails,\n      createdBy: {\n        name: this.state.user.displayName,\n        photoURL: this.state.user.photoURL,\n      },\n    };\n\n    this.state.channelsRef\n      .child(key)\n      .update(newChannel)\n      .then(() => {\n        this.setState({ channelName: \"\", channelDetails: \"\" });\n        this.closeModal();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  changeChannel = (channel) => {\n    this.props.setCurrentChannel(channel);\n    this.setActiveChannel(channel);\n  };\n\n  setFirstChannel = () => {\n    if (this.state.firstLoad && this.state.channels.length > 0) {\n      this.setState({\n        ...this.state,\n        activeChannel: this.state.channels[0].id,\n      });\n      this.setActiveChannel(this.state.channels[0]);\n      this.props.setCurrentChannel(this.state.channels[0]);\n      this.setState({ ...this.state, firstLoad: false });\n    }\n  };\n\n  setActiveChannel = (channel) => {\n    this.setState({ ...this.state, activeChannel: channel.id });\n  };\n\n  displayChannels = () => {\n    if (this.state.channels.length > 0) {\n      return this.state.channels.map((channel) => (\n        <Menu.Item\n          name={channel.name}\n          style={{ opacity: 0.7 }}\n          key={channel.id}\n          onClick={() => {\n            console.log(\"change\");\n            this.changeChannel(channel);\n          }}\n          active={channel.id == this.state.activeChannel}\n        >\n          # {channel.name}\n        </Menu.Item>\n      ));\n    }\n  };\n\n  render() {\n    const { channels } = this.state;\n\n    return (\n      <React.Fragment>\n        <Menu.Menu className=\"menu\" style={{ textAlign: \"center\" }}>\n          <br />\n\n          <Menu.Item>\n            <span>\n              <Icon name=\"exchange\"></Icon>\n              CHANNELS{\" \"}\n            </span>{\" \"}\n            ({channels.length}) <Icon onClick={this.showModal} name=\"add\" />\n          </Menu.Item>\n        </Menu.Menu>\n\n        {this.displayChannels()}\n\n        <Modal basic open={this.state.showModal} onClose={this.closeModal}>\n          <Modal.Header>Add Channel</Modal.Header>\n          <Modal.Content>\n            <Form>\n              <Input\n                fluid\n                label=\"Name Of Channel\"\n                name=\"channelName\"\n                onChange={this.handleChange}\n                value={this.state.channelName}\n              />\n              <br />\n\n              <Input\n                fluid\n                label=\"Description Of Channel\"\n                name=\"channelDetails\"\n                onChange={this.handleChange}\n                value={this.state.channelDetails}\n              />\n            </Form>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              onClick={this.handleSubmit}\n              color=\"green\"\n              inverted\n              style={{ marginBottom: \"20px\" }}\n            >\n              <Icon name=\"checkmark\" />\n              Add Channel\n            </Button>\n            <Button color=\"red\" inverted onClick={this.closeModal}>\n              <Icon name=\"remove\" />\n              Cancel\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user.currentUser,\n});\n\nexport default connect(mapStateToProps, { setCurrentChannel })(Channels);\n","import * as actionTypes from \"./types\";\n\nexport const setUser = (user) => {\n  return {\n    type: actionTypes.SET_USER,\n    payload: {\n      currentUser: user,\n    },\n  };\n};\n\nexport const clearUser = () => {\n  return {\n    type: actionTypes.CLEAR_USER,\n  };\n};\n\n/* CHANNELS */\n\nexport const setCurrentChannel = (channel) => {\n  return {\n    type: actionTypes.SET_CURRENT_CHANNEL,\n    payload: {\n      currentChannel: channel,\n    },\n  };\n};\n","export const SET_USER = \"SET_USER\";\nexport const CLEAR_USER = \"CLEAR_USER\";\n\nexport const SET_CURRENT_CHANNEL = \"SET_CHANNEL\";\n","import React, { Component } from \"react\";\nimport { Menu, Icon } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport firebase from \"../../firebase\";\n\nclass DirectMessages extends Component {\n  state = {\n    users: [],\n    currentUser: null,\n    usersRef: firebase.database().ref(\"users\"),\n  };\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, currentUser: nextProps.currentUser });\n    this.addListeners(this.state.currentUser.uid);\n  }\n\n  addListeners = (uid) => {\n    let loadedUsers = [];\n    this.state.usersRef.on(\"child_added\", (snap) => {});\n  };\n\n  render() {\n    const { users } = this.state;\n    return (\n      <Menu.Menu className=\"menu\">\n        <Menu.Item>\n          <span>\n            <Icon name=\"mail\" /> DIRECT MESSAGES {users.length}\n          </span>\n        </Menu.Item>\n      </Menu.Menu>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n});\n\nexport default connect(mapStateToProps, {})(DirectMessages);\n","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport UserPanel from \"./UserPanel\";\nimport Channels from \"./Channels\";\nimport DirectMessages from \"./DirectMessages\";\n\nclass SidePanel extends React.Component {\n  render() {\n    return (\n      <Menu\n        size=\"large\"\n        inverted\n        fixed=\"left\"\n        vertical\n        style={{ background: \"#2B2B52\", fontSize: \"1.2rem\" }}\n      >\n        <UserPanel />\n        <Channels />\n        <br />\n        <br />\n        <DirectMessages />\n      </Menu>\n    );\n  }\n}\n\nexport default SidePanel;\n","import React from \"react\";\n\nclass MetaPanel extends React.Component {\n  render() {\n    return <div>Helo</div>;\n  }\n}\n\nexport default MetaPanel;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Grid } from \"semantic-ui-react\";\nimport Messages from \"./messages/Messages\";\nimport ColorPanel from \"./color-panel/ColorPanel\";\nimport SidePanel from \"./side-panel/SidePanel\";\nimport MetaPanel from \"./meta-panel/MetaPanel\";\nimport { connect } from \"react-redux\";\n\nfunction App(props) {\n  return (\n    <Grid columns=\"equal\" className=\"app\" style={{ background: \"#eee\" }}>\n      <ColorPanel />\n      <SidePanel currentUser={props.currentUser} />\n      <Grid.Column style={{ marginLeft: 320 }}>\n        <Messages />\n      </Grid.Column>\n\n      <Grid.Column width={4}>\n        <MetaPanel />\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon,\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errors: [],\n    loading: false,\n    usersRef: firebase.database().ref(\"users\"),\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ errors: [], loading: true });\n    if (this.isFormValid(this.state)) {\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then((signedInUser) => {\n          this.setState({ loading: false });\n        })\n        .catch((err) => {\n          console.log(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false,\n          });\n        });\n    }\n  };\n\n  isFormValid = ({ email, password }) => email && password;\n\n  saveUser = (createdUser) => {\n    return this.state.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL,\n    });\n  };\n\n  showErrors = () => {\n    return this.state.errors.map((err, i) => <p key={i}>{err.message}</p>);\n  };\n\n  render() {\n    const { email, password, loading } = this.state;\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: \"450px\" }}>\n          <Header as=\"h4\" icon color=\"blue\" textAlign=\"center\">\n            <Icon name=\"code branch\" color=\"violet\">\n              {\" \"}\n              <br />\n              Login for Klack\n            </Icon>\n          </Header>\n          {this.state.errors.length > 0 && (\n            <Message color=\"red\">\n              <h4>Errors</h4>\n              {this.showErrors()}\n            </Message>\n          )}\n          <Form size=\"large\" onSubmit={this.handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"email\"\n                value={email}\n                icon=\"envelope\"\n                iconPosition=\"left\"\n                placeholder=\"Email\"\n                type=\"email\"\n                onChange={this.handleChange}\n              ></Form.Input>\n              <Form.Input\n                fluid\n                value={password}\n                name=\"password\"\n                icon=\"key\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                type=\"password\"\n                onChange={this.handleChange}\n              ></Form.Input>\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"violet\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New User? <Link to=\"/register\">Register Here</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon,\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\nimport md5 from \"md5\";\n\nclass Register extends React.Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    errors: [],\n    loading: false,\n    usersRef: firebase.database().ref(\"users\"),\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ errors: [], loading: true });\n    if (this.isFormValid()) {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then((createdUser) => {\n          createdUser.user\n            .updateProfile({\n              displayName: this.state.username,\n              photoURL: `http://gravatar.com/avatar/${md5(\n                createdUser.user.email\n              )}?d=identicon`,\n            })\n            .then(() => {\n              this.saveUser(createdUser).then(() => {\n                console.log(\"user saved\");\n                this.setState({ loading: false });\n              });\n            })\n            .catch((err) => console.log(err));\n        })\n        .catch((err) => {\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false,\n          });\n          console.log(err);\n        });\n    }\n  };\n\n  saveUser = (createdUser) => {\n    return this.state.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL,\n    });\n  };\n\n  isFormValid = () => {\n    if (this.isFormEmpty(this.state)) {\n      this.setState({\n        errors: this.state.errors.concat({\n          message: \"Please fillout all fields\",\n        }),\n      });\n    } else if (\n      !this.isPasswordValid(\n        this.state.password,\n        this.state.passwordConfirmation\n      )\n    ) {\n    } else {\n      return true;\n    }\n  };\n\n  isFormEmpty = ({ email, username, password, passwordConfirmation }) => {\n    return (\n      !password.length ||\n      !passwordConfirmation.length ||\n      !username.length ||\n      !email.length\n    );\n  };\n\n  isPasswordValid = (password, passwordConfirmation) => {\n    if (password.length < 6) {\n      this.setState({\n        errors: this.state.errors.concat({\n          message: \"Password must be 6 characters long\",\n        }),\n      });\n      return false;\n    } else if (password !== passwordConfirmation) {\n      this.setState({\n        errors: this.state.errors.concat({ message: \"Passwords donot match\" }),\n      });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  showErrors = () => {\n    return this.state.errors.map((err, i) => <p key={i}>{err.message}</p>);\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      password,\n      passwordConfirmation,\n      loading,\n    } = this.state;\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: \"450px\" }}>\n          <Header as=\"h4\" icon color=\"blue\" textAlign=\"center\">\n            <Icon name=\"comment outline\" color=\"blue\">\n              {\" \"}\n              <br />\n              Register for Klack\n            </Icon>\n          </Header>\n          {this.state.errors.length > 0 && (\n            <Message color=\"red\">\n              <h4>Errors</h4>\n              {this.showErrors()}\n            </Message>\n          )}\n          <Form size=\"large\" onSubmit={this.handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"username\"\n                value={username}\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Username\"\n                type=\"text\"\n                onChange={this.handleChange}\n              ></Form.Input>\n              <Form.Input\n                fluid\n                name=\"email\"\n                value={email}\n                icon=\"envelope\"\n                iconPosition=\"left\"\n                placeholder=\"Email\"\n                type=\"text\"\n                onChange={this.handleChange}\n              ></Form.Input>\n              <Form.Input\n                fluid\n                value={password}\n                name=\"password\"\n                icon=\"key\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                type=\"password\"\n                onChange={this.handleChange}\n              ></Form.Input>\n              <Form.Input\n                fluid\n                value={passwordConfirmation}\n                name=\"passwordConfirmation\"\n                icon=\"repeat\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                type=\"password\"\n                onChange={this.handleChange}\n              ></Form.Input>\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"blue\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            Already A User ? <Link to=\"/login\">Login Here</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Register;\n","import * as actionTypes from \"../actions/types\";\nimport { combineReducers } from \"redux\";\n\nconst initialUserState = {\n  currentUser: null,\n  isLoading: true,\n};\n\nconst initialChannelState = {\n  currentChannel: null,\n};\n\nconst user_reducer = (state = initialUserState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        currentUser: action.payload.currentUser,\n        isLoading: false,\n      };\n\n    case actionTypes.CLEAR_USER:\n      return {\n        ...initialUserState,\n        isLoading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst channel_reducer = (state = initialChannelState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload.currentChannel,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  user: user_reducer,\n  channel: channel_reducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nexport default function Spinner() {\n  return (\n    <Dimmer active>\n      <Loader size=\"huge\" content=\"Preparing Chat...\" />\n    </Dimmer>\n  );\n}\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  withRouter,\n} from \"react-router-dom\";\nimport App from \"./App\";\nimport Login from \"./auth/Login\";\nimport Register from \"./auth/Register\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport firebase from \"../firebase\";\nimport { createStore } from \"redux\";\nimport { Provider, connect } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"../reducers\";\nimport { setUser, clearUser } from \"../actions/index\";\nimport Spinner from \"../Spinner\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nclass Root extends React.Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.props.setUser(user);\n        this.props.history.push(\"/\");\n      } else {\n        this.props.clearUser();\n\n        this.props.history.push(\"/login\");\n      }\n    });\n  }\n\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <Switch>\n        <Route path=\"/\" exact component={App} />\n        <Route path=\"/login\" exact component={Login} />\n        <Route path=\"/register\" exact component={Register} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.user.isLoading,\n});\n\nconst RoutesWithAuth = withRouter(\n  connect(mapStateToProps, { setUser, clearUser })(Root)\n);\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <RoutesWithAuth />\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport Routes from \"./components/Routes\";\n\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}